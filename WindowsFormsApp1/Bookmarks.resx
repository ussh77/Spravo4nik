<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        R04AAAAASUVORK5CYII=
</value>
  </data>
</root>